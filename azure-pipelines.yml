# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- Feature

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
stages: 
    
  # build stage
  - stage: Build
    jobs:
    - job: Build
      steps:
      - task: UseDotNet@2
        inputs:
          version: '5.0.x'
          includePreviewVersions: true # required for preview versions
      - task: UseDotNet@2
        inputs:
          version: '3.0.x'
          packageType: runtime
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK'
        inputs:
          version: 5.0.x
          includePreviewVersions: true # required for preview versions
          performMultiLevelLookUp: true
      - task: DotNetCoreCLI@2
        inputs:
          command: restore
          feedsToUse: select
          vstsFeed: 'my-vsts-feed'
        
      
      # The following task is building the project.
      - task: DotNetCoreCLI@2
        displayName: 'dotnet build $(buildConfiguration)'
        inputs:
          command: build
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
        
      
      # The following task is testing the project (unit test using a test fremework) 11.04.2022
      - task: DotNetCoreCLI@2
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
  
  
  # test stage
  - stage: Test
    jobs:
    - job: Test
      steps:
      # collect code coverage with coverlet
        - task: UseDotNet@2
          inputs:
            version: '5.0.x'
            includePreviewVersions: true # required for preview versions
        - task: DotNetCoreCLI@2
          displayName: 'dotnet build'
          inputs:
            command: build
            configuration: $(buildConfiguration)
        - task: DotNetCoreCLI@2
          displayName: 'dotnet test'
          inputs:
           command: test
           arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'
           publishTestResults: true
           projects: 'MyTestLibraby' # we need to update with our test project directory name.
        - task: PublishCodeCoverageResults@1
          displayName: 'Publish Code Coverage Report'
          inputs:
            codeCoverageTool: Cobertura
            summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
    - job: Run

  # release stage
  - stage: Release
    jobs:
    - job: 

  # deploy stage
  - stage: Deploy
    jobs:
    - job: # package and deliver your code.
